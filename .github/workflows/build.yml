name: Binary Build
on:
  push:
    branches: '*'
  pull_request:
    branches: [master] # This allows us to test PRs without always needing to build locally. It's secure as all first time contributors first need to be approved for running GitHub actions
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v14.1
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/38da06c69f821af50323d54b28d342cc3eb42891.tar.gz
    - uses: cachix/cachix-action@v10
      with:
        name: digitallyinduced
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: |
          git clone https://github.com/digitallyinduced/ihp-boilerplate.git
    - name: Cache build directory
      uses: actions/cache@v2
      with:
        path: |
          ihp-boilerplate/build
        key: ${{ runner.os }}-ghc
    - run: |
          cd ihp-boilerplate
          echo "<?php" >> replace.php
          echo "\$file_contents = file_get_contents('./default.nix');" >> replace.php
          echo '$new_content = preg_replace("/\".{40}\"/", "\"$argv[1]\"", $file_contents);' >> replace.php
          echo '$new_content_with_ref = preg_replace("/refs\/tags\/v\d+.\d+.\d+/", "${{ github.ref }}", $new_content);' >> replace.php
          echo '$new_content_with_ref = str_replace("p.ihp", "p.ihp wreq mmark mmark-ext strip-ansi-escape stripe-signature stripe-concepts http-conduit units units-defs haskell-to-elm aeson-casing ihp-zip ihp-sentry minio-hs", $new_content_with_ref);' >> replace.php
          echo "file_put_contents('./default.nix', \$new_content_with_ref);" >> replace.php
          echo "?>" >> replace.php
          php replace.php $GITHUB_SHA
          cat default.nix
          mv Makefile Makefile.old
          echo 'GHC_OPTIONS+= -rtsopts=all\n.SHELLFLAGS := -eu -o pipefail -c\n\n'|cat - Makefile.old > Makefile
          nix-shell --option sandbox false --run "new-application Web && make build/bin/RunUnoptimizedProdServer"
          
